// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WineCloud2.Models.DAL;

namespace WineCloud2.Models.Migrations
{
    [DbContext(typeof(WineCloudDbContext))]
    [Migration("20190528051516_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WineCloud2.Models.DAL.Bottle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BottleTypeId");

                    b.Property<Guid>("CellarId");

                    b.Property<string>("Color")
                        .HasMaxLength(16);

                    b.Property<string>("CreatedById")
                        .HasMaxLength(64);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(64);

                    b.Property<string>("Notes")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("OpenedDate");

                    b.Property<DateTime?>("PurchaseDate");

                    b.Property<double?>("PurchasePrice");

                    b.Property<Guid?>("RackColumnId");

                    b.Property<Guid?>("RackId");

                    b.Property<Guid?>("RackRowId");

                    b.Property<DateTime?>("StorageDate");

                    b.Property<double?>("StorageTemparature");

                    b.Property<string>("Varietal")
                        .HasMaxLength(64);

                    b.Property<string>("Vinyard")
                        .HasMaxLength(64);

                    b.Property<string>("Winery")
                        .HasMaxLength(64);

                    b.Property<int?>("YearVintage");

                    b.Property<Guid?>("ZoneId");

                    b.HasKey("Id");

                    b.HasIndex("BottleTypeId");

                    b.HasIndex("CellarId");

                    b.HasIndex("RackId");

                    b.HasIndex("RackRowId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Bottles");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.BottleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CellarId");

                    b.Property<string>("Color")
                        .HasMaxLength(16);

                    b.Property<string>("CreatedById")
                        .HasMaxLength(64);

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(64);

                    b.Property<string>("Notes")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("OpenedDate");

                    b.Property<DateTime?>("PurchaseDate");

                    b.Property<double?>("PurchasePrice");

                    b.Property<Guid?>("RackId");

                    b.Property<Guid?>("RackRowId");

                    b.Property<DateTime?>("StorageDate");

                    b.Property<double?>("StorageTemparature");

                    b.Property<string>("Varietal")
                        .HasMaxLength(64);

                    b.Property<string>("Vinyard")
                        .HasMaxLength(64);

                    b.Property<string>("Winery")
                        .HasMaxLength(64);

                    b.Property<int?>("YearVintage");

                    b.Property<Guid?>("ZoneId");

                    b.HasKey("Id");

                    b.ToTable("BottleTypes");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.Cellar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Cellars");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.CellarUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CellarId");

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CellarId");

                    b.HasIndex("UserId");

                    b.ToTable("CellarUsers");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.Rack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CellarId");

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(64);

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("CellarId");

                    b.ToTable("Racks");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.RackColumn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BottleId");

                    b.Property<Guid?>("BottleId1");

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RackRowId");

                    b.HasKey("Id");

                    b.HasIndex("BottleId1");

                    b.HasIndex("RackRowId");

                    b.ToTable("RackColumns");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.RackRow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<Guid>("ZoneId");

                    b.HasKey("Id");

                    b.HasIndex("ZoneId");

                    b.ToTable("RackRows");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.Zone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<Guid>("RackId");

                    b.Property<bool?>("StaggeredRows");

                    b.Property<double?>("Temperature");

                    b.HasKey("Id");

                    b.HasIndex("RackId");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.Bottle", b =>
                {
                    b.HasOne("WineCloud2.Models.DAL.BottleType", "BottleType")
                        .WithMany("Bottles")
                        .HasForeignKey("BottleTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WineCloud2.Models.DAL.Cellar", "Cellar")
                        .WithMany("Bottles")
                        .HasForeignKey("CellarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WineCloud2.Models.DAL.Rack")
                        .WithMany("Bottles")
                        .HasForeignKey("RackId");

                    b.HasOne("WineCloud2.Models.DAL.RackRow")
                        .WithMany("Bottles")
                        .HasForeignKey("RackRowId");

                    b.HasOne("WineCloud2.Models.DAL.Zone")
                        .WithMany("Bottles")
                        .HasForeignKey("ZoneId");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.CellarUser", b =>
                {
                    b.HasOne("WineCloud2.Models.DAL.Cellar", "Cellar")
                        .WithMany("CellarUsers")
                        .HasForeignKey("CellarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WineCloud2.Models.DAL.User", "User")
                        .WithMany("CellarUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.Rack", b =>
                {
                    b.HasOne("WineCloud2.Models.DAL.Cellar")
                        .WithMany("Racks")
                        .HasForeignKey("CellarId");
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.RackColumn", b =>
                {
                    b.HasOne("WineCloud2.Models.DAL.Bottle", "Bottle")
                        .WithMany()
                        .HasForeignKey("BottleId1");

                    b.HasOne("WineCloud2.Models.DAL.RackRow")
                        .WithMany("RackColumns")
                        .HasForeignKey("RackRowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.RackRow", b =>
                {
                    b.HasOne("WineCloud2.Models.DAL.Zone")
                        .WithMany("RackRows")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WineCloud2.Models.DAL.Zone", b =>
                {
                    b.HasOne("WineCloud2.Models.DAL.Rack")
                        .WithMany("Zones")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
